<!--
{
  imports : [{
    view : { name : '', path : ''}
    model : { name : '', path : ''}
  }]

  pages : [{
    path : '',
    layout : ''
    contentScript : '',
    renderScript : '',
    mapScript : ''
    noViewsScript : ''
  }]
}

!-->

define([

  'backbone',
  'jquery',
  {{~it.imports :_import:index}}
    '{{=_import.view.path}}',
    '{{=_import.model.path}}'
    {{?index !== it.imports.length - 1}},{{?}}
  {{~}}

], function(

  Backbone,
  $,
  {{~it.imports :_import:index}}
    {{=_import.view.name}},
    {{=_import.model.name}}
    {{?index !== it.imports.length - 1}},{{?}}
  {{~}}

) {

  var Constructor = Backbone.Router.extend({

    routes : {
    {{~it.pages :page:index}}
      '{{=page.path}}' : 'compose {{=page.path}}'
      {{?index !== it.pages.length - 1}},{{?}}
    {{~}}
    },

    {{~it.pages :page:index}}
      'compose {{=page.path}}' : function() {
        var _this = this
          , incorrectRegions = 0
          , n = 0;

        app.document.trigger('fetchstart', '{{=page.path}}');

        {{=page.contentScript}}

        for(var view in app.views) {
          if({{=page.noViewsScript}}) {
            app.views[view].remove();
            delete app.views[view];
            if(typeof app.models[view] !== 'undefined') {
              Backbone.Relational.store.unregister(app.models[view]);
            }
          }
        }
      },
    {{~}}

    {{~it.pages :page:index}}
    'render {{=page.path}}' : function() {
      app.document.trigger('renderstart');
      if(document.querySelectorAll('[data-layout={{=page.layout}}]').length) {
        {{=page.renderScript}}
      }
      else {
        app.$layout.remove();
        app.$body.append(app.layoutTmpls.{{=page.layout}}({
          {{=page.mapScript}}
        }));
      }

      app.document.trigger('renderend');
    },
    {{~}}
  });

  Constructor.prototype.content = {};
  return Constructor;
});
